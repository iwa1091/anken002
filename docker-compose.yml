# version: '3.8' # この行は削除しました。Docker Composeの新しいバージョンでは不要です。

services:
  # Nginxサービスの設定
  nginx:
    image: nginx:1.21.1
    ports:
      - "80:80"
    volumes:
      # Nginxはpublicディレクトリからの静的ファイル提供に必要なので、./src をマウント
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network

  # PHP-FPMサービスの設定
  php:
    build: # Dockerfileのビルドコンテキストをプロジェクトルートに設定
      context: .
      dockerfile: ./docker/php/Dockerfile
    volumes:
      # ホストの./srcをコンテナの/var/www/htmlにマウント
      # これにより、src内の全てのLaravelファイル（.envを含む）がコンテナから見えるようになります。
      - ./src:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini # php.iniをマウント
      # ★★★ここを修正: .envファイルの直接マウントを削除しました★★★
      # - ./.env:/var/www/html/.env:rw # この行を削除
    networks:
      - app-network
    environment: # Docker環境固有の変数のみを設定
      DB_HOST: mysql
      DB_DATABASE: laravel_db
      DB_USERNAME: laravel_user
      DB_PASSWORD: laravel_pass
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
    depends_on: # 依存関係を明示
      mysql:
        condition: service_healthy # mysqlサービスがhealthyになるまで待つ
      mailhog: # mailhogも条件付き依存として記述
        condition: service_started # mailhogサービスが起動するまで待つ (healthyは不要)
    # command: bash -c "sleep 5 && php-fpm" # command行は削除 (DockerfileのCMDを使用)

  # MySQLデータベースサービスの設定
  mysql:
    image: mysql:8.0.26
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
      TZ: 'Asia/Tokyo'
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 5s
      timeout: 10s
      retries: 10

  # phpMyAdminサービスの設定
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_pass
    depends_on:
      - mysql
    ports:
      - 8080:80
    networks:
      - app-network

  # MailHogサービスの設定
  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP server
    networks:
      - app-network

# Dockerネットワークの定義
networks:
  app-network:
    driver: bridge
